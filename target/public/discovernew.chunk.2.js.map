{"version":3,"file":"discovernew.chunk.2.js","sources":["/plugin:discovernew/plugins/kibanaDiscover1/public/application/components/discover_grid/discover_grid.scss?v8dark?v8dark","/plugin:discovernew/plugins/kibanaDiscover1/public/application/components/discover_grid/discover_grid.scss?v8light?v8light","/plugin:discovernew/node_modules/decode-uri-component/index.js","/plugin:discovernew/node_modules/query-string/index.js","/plugin:discovernew/node_modules/split-on-first/index.js","/plugin:discovernew/node_modules/strict-uri-encode/index.js","/plugin:discovernew/plugins/kibanaDiscover1/public/application/angular/create_discover_grid_directive.tsx","/plugin:discovernew/plugins/kibanaDiscover1/public/application/angular/doc_table/actions/columns.ts","/plugin:discovernew/plugins/kibanaDiscover1/public/application/angular/doc_table/create_doc_table_react.tsx","/plugin:discovernew/plugins/kibanaDiscover1/public/application/apps/main/components/skip_bottom_button/index.ts","/plugin:discovernew/plugins/kibanaDiscover1/public/application/apps/main/components/skip_bottom_button/skip_bottom_button.tsx","/plugin:discovernew/plugins/kibanaDiscover1/public/application/components/discover_grid/constants.ts","/plugin:discovernew/plugins/kibanaDiscover1/public/application/components/discover_grid/discover_grid.scss","webpack:///./public/application/components/discover_grid/discover_grid.scss?9d03","webpack:///./public/application/components/discover_grid/discover_grid.scss?4707","/plugin:discovernew/plugins/kibanaDiscover1/public/application/components/discover_grid/discover_grid.tsx","/plugin:discovernew/plugins/kibanaDiscover1/public/application/components/discover_grid/discover_grid_cell_actions.tsx","/plugin:discovernew/plugins/kibanaDiscover1/public/application/components/discover_grid/discover_grid_columns.tsx","/plugin:discovernew/plugins/kibanaDiscover1/public/application/components/discover_grid/discover_grid_context.tsx","/plugin:discovernew/plugins/kibanaDiscover1/public/application/components/discover_grid/discover_grid_document_selection.tsx","/plugin:discovernew/plugins/kibanaDiscover1/public/application/components/discover_grid/discover_grid_expand_button.tsx","/plugin:discovernew/plugins/kibanaDiscover1/public/application/components/discover_grid/discover_grid_flyout.tsx","/plugin:discovernew/plugins/kibanaDiscover1/public/application/components/discover_grid/discover_grid_schema.ts","/plugin:discovernew/plugins/kibanaDiscover1/public/application/components/discover_grid/get_render_cell_value.tsx","/plugin:discovernew/plugins/kibanaDiscover1/public/application/components/json_code_editor/json_code_editor.tsx","/plugin:discovernew/plugins/kibanaDiscover1/public/application/helpers/columns.ts","/plugin:discovernew/plugins/kibanaDiscover1/public/application/helpers/get_context_url.tsx","/plugin:discovernew/plugins/kibanaDiscover1/public/application/helpers/popularize_field.ts"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"/**\\n * 1. Focus rings shouldn't be visible on scrollable regions, but a11y requires them to be focusable.\\n *    Browser's supporting `:focus-visible` will still show outline on keyboard focus only.\\n *    Others like Safari, won't show anything at all.\\n * 2. Force the `:focus-visible` when the `tabindex=0` (is tabbable)\\n */\\n.dscDiscoverGrid {\\n  width: 100%;\\n  max-width: 100%;\\n  height: 100%;\\n  overflow: hidden; }\\n  .dscDiscoverGrid .euiDataGrid__controls {\\n    border: none;\\n    border-bottom: 1px solid #343741; }\\n  .dscDiscoverGrid .euiDataGridRowCell.euiDataGridRowCell--firstColumn {\\n    border-left: none;\\n    padding: 0; }\\n  .dscDiscoverGrid .euiDataGridRowCell.euiDataGridRowCell--lastColumn {\\n    border-right: none; }\\n  .dscDiscoverGrid .euiDataGridRowCell:first-of-type,\\n  .dscDiscoverGrid .euiDataGrid--headerShade.euiDataGrid--bordersAll .euiDataGridHeaderCell:first-of-type {\\n    border-left: none;\\n    border-right: none; }\\n  .dscDiscoverGrid .euiDataGridRowCell:last-of-type,\\n  .dscDiscoverGrid .euiDataGridHeaderCell:last-of-type {\\n    border-right: none; }\\n\\n.dscDiscoverGrid__footer {\\n  background-color: #343741;\\n  padding: 8px 16px;\\n  margin-top: 4px;\\n  text-align: center; }\\n\\n.dscTable__flyoutHeader {\\n  white-space: nowrap; }\\n\\n.dscTable__flyoutDocumentNavigation {\\n  justify-content: flex-end; }\\n\\n.euiDataGridHeader {\\n  display: flex; }\\n  .euiDataGridHeader .euiDataGridHeaderCell__content {\\n    max-width: 100%;\\n    overflow: hidden !important;\\n    text-overflow: ellipsis !important;\\n    white-space: nowrap !important;\\n    word-wrap: normal !important;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    flex-grow: 1; }\\n  .euiDataGridHeader .euiDataGridHeaderCell__popover {\\n    flex-grow: 0;\\n    flex-basis: auto;\\n    width: auto;\\n    padding-left: 4px; }\\n\\n.euiDataGridRowCell--numeric {\\n  text-align: right; }\\n\\n.euiDataGrid__loading,\\n.euiDataGrid__noResults {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  flex: 1 0 100%;\\n  text-align: center;\\n  height: 100%;\\n  width: 100%; }\\n\\n.dscFormatSource {\\n  max-width: 100%;\\n  overflow: hidden !important;\\n  text-overflow: ellipsis !important;\\n  white-space: nowrap !important;\\n  word-wrap: normal !important; }\\n\\n.dscDiscoverGrid__descriptionListDescription {\\n  word-break: normal !important; }\\n\\n@media only screen and (max-width: 574px) {\\n  .dscTable__flyoutDocumentNavigation .euiPagination__compressedText {\\n    display: none; } }\\n\\n@media only screen and (min-width: 575px) and (max-width: 767px) {\\n  .dscTable__flyoutDocumentNavigation .euiPagination__compressedText {\\n    display: none; } }\\n\\n@media only screen and (min-width: 768px) and (max-width: 991px) {\\n  .dscTable__flyoutDocumentNavigation .euiPagination__compressedText {\\n    display: none; } }\\n\", \"\",{\"version\":3,\"sources\":[\"discover_grid.scss\"],\"names\":[],\"mappings\":\"AAAA;;;;;EAKE;AACF;EACE,WAAW;EACX,eAAe;EACf,YAAY;EACZ,gBAAgB,EAAE;EAClB;IACE,YAAY;IACZ,gCAAgC,EAAE;EACpC;IACE,iBAAiB;IACjB,UAAU,EAAE;EACd;IACE,kBAAkB,EAAE;EACtB;;IAEE,iBAAiB;IACjB,kBAAkB,EAAE;EACtB;;IAEE,kBAAkB,EAAE;;AAExB;EACE,yBAAyB;EACzB,iBAAiB;EACjB,eAAe;EACf,kBAAkB,EAAE;;AAEtB;EACE,mBAAmB,EAAE;;AAEvB;EACE,yBAAyB,EAAE;;AAE7B;EACE,aAAa,EAAE;EACf;IACE,eAAe;IACf,2BAA2B;IAC3B,kCAAkC;IAClC,8BAA8B;IAC9B,4BAA4B;IAC5B,gBAAgB;IAChB,mBAAmB;IACnB,YAAY,EAAE;EAChB;IACE,YAAY;IACZ,gBAAgB;IAChB,WAAW;IACX,iBAAiB,EAAE;;AAEvB;EACE,iBAAiB,EAAE;;AAErB;;EAEE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,cAAc;EACd,kBAAkB;EAClB,YAAY;EACZ,WAAW,EAAE;;AAEf;EACE,eAAe;EACf,2BAA2B;EAC3B,kCAAkC;EAClC,8BAA8B;EAC9B,4BAA4B,EAAE;;AAEhC;EACE,6BAA6B,EAAE;;AAEjC;EACE;IACE,aAAa,EAAE,EAAE;;AAErB;EACE;IACE,aAAa,EAAE,EAAE;;AAErB;EACE;IACE,aAAa,EAAE,EAAE\",\"file\":\"discover_grid.scss\",\"sourcesContent\":[\"/**\\n * 1. Focus rings shouldn't be visible on scrollable regions, but a11y requires them to be focusable.\\n *    Browser's supporting `:focus-visible` will still show outline on keyboard focus only.\\n *    Others like Safari, won't show anything at all.\\n * 2. Force the `:focus-visible` when the `tabindex=0` (is tabbable)\\n */\\n.dscDiscoverGrid {\\n  width: 100%;\\n  max-width: 100%;\\n  height: 100%;\\n  overflow: hidden; }\\n  .dscDiscoverGrid .euiDataGrid__controls {\\n    border: none;\\n    border-bottom: 1px solid #343741; }\\n  .dscDiscoverGrid .euiDataGridRowCell.euiDataGridRowCell--firstColumn {\\n    border-left: none;\\n    padding: 0; }\\n  .dscDiscoverGrid .euiDataGridRowCell.euiDataGridRowCell--lastColumn {\\n    border-right: none; }\\n  .dscDiscoverGrid .euiDataGridRowCell:first-of-type,\\n  .dscDiscoverGrid .euiDataGrid--headerShade.euiDataGrid--bordersAll .euiDataGridHeaderCell:first-of-type {\\n    border-left: none;\\n    border-right: none; }\\n  .dscDiscoverGrid .euiDataGridRowCell:last-of-type,\\n  .dscDiscoverGrid .euiDataGridHeaderCell:last-of-type {\\n    border-right: none; }\\n\\n.dscDiscoverGrid__footer {\\n  background-color: #343741;\\n  padding: 8px 16px;\\n  margin-top: 4px;\\n  text-align: center; }\\n\\n.dscTable__flyoutHeader {\\n  white-space: nowrap; }\\n\\n.dscTable__flyoutDocumentNavigation {\\n  justify-content: flex-end; }\\n\\n.euiDataGridHeader {\\n  display: flex; }\\n  .euiDataGridHeader .euiDataGridHeaderCell__content {\\n    max-width: 100%;\\n    overflow: hidden !important;\\n    text-overflow: ellipsis !important;\\n    white-space: nowrap !important;\\n    word-wrap: normal !important;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    flex-grow: 1; }\\n  .euiDataGridHeader .euiDataGridHeaderCell__popover {\\n    flex-grow: 0;\\n    flex-basis: auto;\\n    width: auto;\\n    padding-left: 4px; }\\n\\n.euiDataGridRowCell--numeric {\\n  text-align: right; }\\n\\n.euiDataGrid__loading,\\n.euiDataGrid__noResults {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  flex: 1 0 100%;\\n  text-align: center;\\n  height: 100%;\\n  width: 100%; }\\n\\n.dscFormatSource {\\n  max-width: 100%;\\n  overflow: hidden !important;\\n  text-overflow: ellipsis !important;\\n  white-space: nowrap !important;\\n  word-wrap: normal !important; }\\n\\n.dscDiscoverGrid__descriptionListDescription {\\n  word-break: normal !important; }\\n\\n@media only screen and (max-width: 574px) {\\n  .dscTable__flyoutDocumentNavigation .euiPagination__compressedText {\\n    display: none; } }\\n\\n@media only screen and (min-width: 575px) and (max-width: 767px) {\\n  .dscTable__flyoutDocumentNavigation .euiPagination__compressedText {\\n    display: none; } }\\n\\n@media only screen and (min-width: 768px) and (max-width: 991px) {\\n  .dscTable__flyoutDocumentNavigation .euiPagination__compressedText {\\n    display: none; } }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(true);\n// Module\nexports.push([module.id, \"/**\\n * 1. Focus rings shouldn't be visible on scrollable regions, but a11y requires them to be focusable.\\n *    Browser's supporting `:focus-visible` will still show outline on keyboard focus only.\\n *    Others like Safari, won't show anything at all.\\n * 2. Force the `:focus-visible` when the `tabindex=0` (is tabbable)\\n */\\n.dscDiscoverGrid {\\n  width: 100%;\\n  max-width: 100%;\\n  height: 100%;\\n  overflow: hidden; }\\n  .dscDiscoverGrid .euiDataGrid__controls {\\n    border: none;\\n    border-bottom: 1px solid #D3DAE6; }\\n  .dscDiscoverGrid .euiDataGridRowCell.euiDataGridRowCell--firstColumn {\\n    border-left: none;\\n    padding: 0; }\\n  .dscDiscoverGrid .euiDataGridRowCell.euiDataGridRowCell--lastColumn {\\n    border-right: none; }\\n  .dscDiscoverGrid .euiDataGridRowCell:first-of-type,\\n  .dscDiscoverGrid .euiDataGrid--headerShade.euiDataGrid--bordersAll .euiDataGridHeaderCell:first-of-type {\\n    border-left: none;\\n    border-right: none; }\\n  .dscDiscoverGrid .euiDataGridRowCell:last-of-type,\\n  .dscDiscoverGrid .euiDataGridHeaderCell:last-of-type {\\n    border-right: none; }\\n\\n.dscDiscoverGrid__footer {\\n  background-color: #D3DAE6;\\n  padding: 8px 16px;\\n  margin-top: 4px;\\n  text-align: center; }\\n\\n.dscTable__flyoutHeader {\\n  white-space: nowrap; }\\n\\n.dscTable__flyoutDocumentNavigation {\\n  justify-content: flex-end; }\\n\\n.euiDataGridHeader {\\n  display: flex; }\\n  .euiDataGridHeader .euiDataGridHeaderCell__content {\\n    max-width: 100%;\\n    overflow: hidden !important;\\n    text-overflow: ellipsis !important;\\n    white-space: nowrap !important;\\n    word-wrap: normal !important;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    flex-grow: 1; }\\n  .euiDataGridHeader .euiDataGridHeaderCell__popover {\\n    flex-grow: 0;\\n    flex-basis: auto;\\n    width: auto;\\n    padding-left: 4px; }\\n\\n.euiDataGridRowCell--numeric {\\n  text-align: right; }\\n\\n.euiDataGrid__loading,\\n.euiDataGrid__noResults {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  flex: 1 0 100%;\\n  text-align: center;\\n  height: 100%;\\n  width: 100%; }\\n\\n.dscFormatSource {\\n  max-width: 100%;\\n  overflow: hidden !important;\\n  text-overflow: ellipsis !important;\\n  white-space: nowrap !important;\\n  word-wrap: normal !important; }\\n\\n.dscDiscoverGrid__descriptionListDescription {\\n  word-break: normal !important; }\\n\\n@media only screen and (max-width: 574px) {\\n  .dscTable__flyoutDocumentNavigation .euiPagination__compressedText {\\n    display: none; } }\\n\\n@media only screen and (min-width: 575px) and (max-width: 767px) {\\n  .dscTable__flyoutDocumentNavigation .euiPagination__compressedText {\\n    display: none; } }\\n\\n@media only screen and (min-width: 768px) and (max-width: 991px) {\\n  .dscTable__flyoutDocumentNavigation .euiPagination__compressedText {\\n    display: none; } }\\n\", \"\",{\"version\":3,\"sources\":[\"discover_grid.scss\"],\"names\":[],\"mappings\":\"AAAA;;;;;EAKE;AACF;EACE,WAAW;EACX,eAAe;EACf,YAAY;EACZ,gBAAgB,EAAE;EAClB;IACE,YAAY;IACZ,gCAAgC,EAAE;EACpC;IACE,iBAAiB;IACjB,UAAU,EAAE;EACd;IACE,kBAAkB,EAAE;EACtB;;IAEE,iBAAiB;IACjB,kBAAkB,EAAE;EACtB;;IAEE,kBAAkB,EAAE;;AAExB;EACE,yBAAyB;EACzB,iBAAiB;EACjB,eAAe;EACf,kBAAkB,EAAE;;AAEtB;EACE,mBAAmB,EAAE;;AAEvB;EACE,yBAAyB,EAAE;;AAE7B;EACE,aAAa,EAAE;EACf;IACE,eAAe;IACf,2BAA2B;IAC3B,kCAAkC;IAClC,8BAA8B;IAC9B,4BAA4B;IAC5B,gBAAgB;IAChB,mBAAmB;IACnB,YAAY,EAAE;EAChB;IACE,YAAY;IACZ,gBAAgB;IAChB,WAAW;IACX,iBAAiB,EAAE;;AAEvB;EACE,iBAAiB,EAAE;;AAErB;;EAEE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,cAAc;EACd,kBAAkB;EAClB,YAAY;EACZ,WAAW,EAAE;;AAEf;EACE,eAAe;EACf,2BAA2B;EAC3B,kCAAkC;EAClC,8BAA8B;EAC9B,4BAA4B,EAAE;;AAEhC;EACE,6BAA6B,EAAE;;AAEjC;EACE;IACE,aAAa,EAAE,EAAE;;AAErB;EACE;IACE,aAAa,EAAE,EAAE;;AAErB;EACE;IACE,aAAa,EAAE,EAAE\",\"file\":\"discover_grid.scss\",\"sourcesContent\":[\"/**\\n * 1. Focus rings shouldn't be visible on scrollable regions, but a11y requires them to be focusable.\\n *    Browser's supporting `:focus-visible` will still show outline on keyboard focus only.\\n *    Others like Safari, won't show anything at all.\\n * 2. Force the `:focus-visible` when the `tabindex=0` (is tabbable)\\n */\\n.dscDiscoverGrid {\\n  width: 100%;\\n  max-width: 100%;\\n  height: 100%;\\n  overflow: hidden; }\\n  .dscDiscoverGrid .euiDataGrid__controls {\\n    border: none;\\n    border-bottom: 1px solid #D3DAE6; }\\n  .dscDiscoverGrid .euiDataGridRowCell.euiDataGridRowCell--firstColumn {\\n    border-left: none;\\n    padding: 0; }\\n  .dscDiscoverGrid .euiDataGridRowCell.euiDataGridRowCell--lastColumn {\\n    border-right: none; }\\n  .dscDiscoverGrid .euiDataGridRowCell:first-of-type,\\n  .dscDiscoverGrid .euiDataGrid--headerShade.euiDataGrid--bordersAll .euiDataGridHeaderCell:first-of-type {\\n    border-left: none;\\n    border-right: none; }\\n  .dscDiscoverGrid .euiDataGridRowCell:last-of-type,\\n  .dscDiscoverGrid .euiDataGridHeaderCell:last-of-type {\\n    border-right: none; }\\n\\n.dscDiscoverGrid__footer {\\n  background-color: #D3DAE6;\\n  padding: 8px 16px;\\n  margin-top: 4px;\\n  text-align: center; }\\n\\n.dscTable__flyoutHeader {\\n  white-space: nowrap; }\\n\\n.dscTable__flyoutDocumentNavigation {\\n  justify-content: flex-end; }\\n\\n.euiDataGridHeader {\\n  display: flex; }\\n  .euiDataGridHeader .euiDataGridHeaderCell__content {\\n    max-width: 100%;\\n    overflow: hidden !important;\\n    text-overflow: ellipsis !important;\\n    white-space: nowrap !important;\\n    word-wrap: normal !important;\\n    overflow: hidden;\\n    white-space: nowrap;\\n    flex-grow: 1; }\\n  .euiDataGridHeader .euiDataGridHeaderCell__popover {\\n    flex-grow: 0;\\n    flex-basis: auto;\\n    width: auto;\\n    padding-left: 4px; }\\n\\n.euiDataGridRowCell--numeric {\\n  text-align: right; }\\n\\n.euiDataGrid__loading,\\n.euiDataGrid__noResults {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  flex: 1 0 100%;\\n  text-align: center;\\n  height: 100%;\\n  width: 100%; }\\n\\n.dscFormatSource {\\n  max-width: 100%;\\n  overflow: hidden !important;\\n  text-overflow: ellipsis !important;\\n  white-space: nowrap !important;\\n  word-wrap: normal !important; }\\n\\n.dscDiscoverGrid__descriptionListDescription {\\n  word-break: normal !important; }\\n\\n@media only screen and (max-width: 574px) {\\n  .dscTable__flyoutDocumentNavigation .euiPagination__compressedText {\\n    display: none; } }\\n\\n@media only screen and (min-width: 575px) and (max-width: 767px) {\\n  .dscTable__flyoutDocumentNavigation .euiPagination__compressedText {\\n    display: none; } }\\n\\n@media only screen and (min-width: 768px) and (max-width: 991px) {\\n  .dscTable__flyoutDocumentNavigation .euiPagination__compressedText {\\n    display: none; } }\\n\"]}]);\n// Exports\nmodule.exports = exports;\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.split('').indexOf(options.arrayFormatSeparator) > -1;\n\t\t\t\tconst newValue = isArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (input, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url, hash] = splitOnFirst(input, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url.split('?')[0] || '',\n\t\t\tquery: parse(extract(input), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (input, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(input.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(input.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, input.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(input.url);\n\tif (input.fragmentIdentifier) {\n\t\thash = `#${encode(input.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport React, { useState } from 'react';\nimport { I18nProvider } from '@kbn/i18n/react';\nimport { DiscoverGrid } from '../components/discover_grid/discover_grid';\nimport { getServices } from '../../kibana_services';\nexport const DataGridMemoized = /*#__PURE__*/React.memo(props => /*#__PURE__*/React.createElement(DiscoverGrid, props));\nexport function DiscoverGridEmbeddable(props) {\n  const [expandedDoc, setExpandedDoc] = useState(undefined);\n  return /*#__PURE__*/React.createElement(I18nProvider, null, /*#__PURE__*/React.createElement(DataGridMemoized, _extends({}, props, {\n    setExpandedDoc: setExpandedDoc,\n    expandedDoc: expandedDoc,\n    services: getServices()\n  })));\n}\n/**\n * this is just needed for the embeddable\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nexport function createDiscoverGridDirective(reactDirective) {\n  return reactDirective(DiscoverGridEmbeddable, [['columns', {\n    watchDepth: 'collection'\n  }], ['indexPattern', {\n    watchDepth: 'reference'\n  }], ['isLoading', {\n    watchDepth: 'reference'\n  }], ['onAddColumn', {\n    watchDepth: 'reference',\n    wrapApply: false\n  }], ['onFilter', {\n    watchDepth: 'reference',\n    wrapApply: false\n  }], ['onRemoveColumn', {\n    watchDepth: 'reference',\n    wrapApply: false\n  }], ['onSetColumns', {\n    watchDepth: 'reference',\n    wrapApply: false\n  }], ['onSort', {\n    watchDepth: 'reference',\n    wrapApply: false\n  }], ['rows', {\n    watchDepth: 'collection'\n  }], ['sampleSize', {\n    watchDepth: 'reference'\n  }], ['searchDescription', {\n    watchDepth: 'reference'\n  }], ['searchTitle', {\n    watchDepth: 'reference'\n  }], ['settings', {\n    watchDepth: 'reference'\n  }], ['showTimeCol', {\n    watchDepth: 'value'\n  }], ['sort', {\n    watchDepth: 'value'\n  }], ['className', {\n    watchDepth: 'value'\n  }]]);\n}","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport { popularizeField } from '../../../helpers/popularize_field';\nimport { SORT_DEFAULT_ORDER_SETTING } from '../../../../../common';\n/**\n * Helper function to provide a fallback to a single _source column if the given array of columns\n * is empty, and removes _source if there are more than 1 columns given\n * @param columns\n * @param useNewFieldsApi should a new fields API be used\n */\n\nfunction buildColumns(columns, useNewFieldsApi = false) {\n  if (columns.length > 1 && columns.indexOf('_source') !== -1) {\n    return columns.filter(col => col !== '_source');\n  } else if (columns.length !== 0) {\n    return columns;\n  }\n\n  return useNewFieldsApi ? [] : ['_source'];\n}\n\nexport function addColumn(columns, columnName, useNewFieldsApi) {\n  if (columns.includes(columnName)) {\n    return columns;\n  }\n\n  return buildColumns([...columns, columnName], useNewFieldsApi);\n}\nexport function removeColumn(columns, columnName, useNewFieldsApi) {\n  if (!columns.includes(columnName)) {\n    return columns;\n  }\n\n  return buildColumns(columns.filter(col => col !== columnName), useNewFieldsApi);\n}\nexport function moveColumn(columns, columnName, newIndex) {\n  if (newIndex < 0 || newIndex >= columns.length || !columns.includes(columnName)) {\n    return columns;\n  }\n\n  const modifiedColumns = [...columns];\n  modifiedColumns.splice(modifiedColumns.indexOf(columnName), 1); // remove at old index\n\n  modifiedColumns.splice(newIndex, 0, columnName); // insert before new index\n\n  return modifiedColumns;\n}\nexport function getStateColumnActions({\n  capabilities,\n  config,\n  indexPattern,\n  indexPatterns,\n  useNewFieldsApi,\n  setAppState,\n  state\n}) {\n  function onAddColumn(columnName) {\n    var _state$sort;\n\n    if (capabilities.discover.save) {\n      popularizeField(indexPattern, columnName, indexPatterns);\n    }\n\n    const columns = addColumn(state.columns || [], columnName, useNewFieldsApi);\n    const defaultOrder = config.get(SORT_DEFAULT_ORDER_SETTING);\n    const sort = columnName === '_score' && !((_state$sort = state.sort) !== null && _state$sort !== void 0 && _state$sort.length) ? [['_score', defaultOrder]] : state.sort;\n    setAppState({\n      columns,\n      sort\n    });\n  }\n\n  function onRemoveColumn(columnName) {\n    if (capabilities.discover.save) {\n      popularizeField(indexPattern, columnName, indexPatterns);\n    }\n\n    const columns = removeColumn(state.columns || [], columnName, useNewFieldsApi); // The state's sort property is an array of [sortByColumn,sortDirection]\n\n    const sort = state.sort && state.sort.length ? state.sort.filter(subArr => subArr[0] !== columnName) : [];\n    setAppState({\n      columns,\n      sort\n    });\n  }\n\n  function onMoveColumn(columnName, newIndex) {\n    const columns = moveColumn(state.columns || [], columnName, newIndex);\n    setAppState({\n      columns\n    });\n  }\n\n  function onSetColumns(columns) {\n    // remove first element of columns if it's the configured timeFieldName, which is prepended automatically\n    const actualColumns = indexPattern.timeFieldName && indexPattern.timeFieldName === columns[0] ? columns.slice(1) : columns;\n    setAppState({\n      columns: actualColumns\n    });\n  }\n\n  return {\n    onAddColumn,\n    onRemoveColumn,\n    onMoveColumn,\n    onSetColumns\n  };\n}","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport angular from 'angular';\nimport { render } from 'react-dom';\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { EuiButtonEmpty } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport { getServices } from '../../../kibana_services';\nimport { SkipBottomButton } from '../../apps/main/components/skip_bottom_button';\n\n/**\n * Compiles and injects the give angular template into the given dom node\n * returns a function to cleanup the injected angular element\n */\nexport async function injectAngularElement(domNode, template, // eslint-disable-next-line @typescript-eslint/no-explicit-any\nrenderProps, injector) {\n  const rootScope = injector.get('$rootScope');\n  const $compile = injector.get('$compile');\n  const newScope = Object.assign(rootScope.$new(), {\n    renderProps\n  });\n  const $target = angular.element(domNode);\n  const $element = angular.element(template);\n  newScope.$apply(() => {\n    const linkFn = $compile($element);\n    $target.empty().append($element);\n    linkFn(newScope);\n  });\n  return newScope;\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction getRenderFn(domNode, props) {\n  const directive = {\n    template: `<doc-table\n                columns=\"renderProps.columns\"\n                data-description=\"{{renderProps.searchDescription}}\"\n                data-shared-item\n                data-test-subj=\"discoverDocTable\"\n                data-title=\"{{renderProps.searchTitle}}\"\n                filter=\"renderProps.onFilter\"\n                hits=\"renderProps.rows\"\n                index-pattern=\"renderProps.indexPattern\"\n                infinite-scroll=\"true\"\n                minimum-visible-rows=\"renderProps.minimumVisibleRows\"\n                on-add-column=\"renderProps.onAddColumn\"\n                on-change-sort-order=\"renderProps.onSort\"\n                on-move-column=\"renderProps.onMoveColumn\"\n                on-remove-column=\"renderProps.onRemoveColumn\"\n                render-complete\n                use-new-fields-api=\"renderProps.useNewFieldsApi\"\n                sorting=\"renderProps.sort\"></doc_table>`\n  };\n  return async () => {\n    try {\n      const injector = await getServices().getEmbeddableInjector();\n      return await injectAngularElement(domNode, directive.template, props, injector);\n    } catch (e) {\n      render( /*#__PURE__*/React.createElement(\"div\", null, \"error\"), domNode);\n    }\n  };\n}\n\nexport function DocTableLegacy(renderProps) {\n  const ref = useRef(null);\n  const scope = useRef();\n  const [rows, setRows] = useState(renderProps.rows);\n  const [minimumVisibleRows, setMinimumVisibleRows] = useState(renderProps.minimumVisibleRows);\n  const onSkipBottomButtonClick = useCallback(async () => {\n    // delay scrolling to after the rows have been rendered\n    const bottomMarker = document.getElementById('discoverBottomMarker');\n\n    const wait = ms => new Promise(resolve => setTimeout(resolve, ms)); // show all the rows\n\n\n    setMinimumVisibleRows(renderProps.rows.length);\n\n    while (renderProps.rows.length !== document.getElementsByClassName('kbnDocTable__row').length) {\n      await wait(50);\n    }\n\n    bottomMarker.focus();\n    await wait(50);\n    bottomMarker.blur();\n  }, [setMinimumVisibleRows, renderProps.rows]);\n  useEffect(() => {\n    setMinimumVisibleRows(renderProps.minimumVisibleRows);\n    setRows(renderProps.rows);\n  }, [renderProps.rows, setMinimumVisibleRows, renderProps.minimumVisibleRows]);\n  useEffect(() => {\n    if (ref && ref.current && !scope.current) {\n      const fn = getRenderFn(ref.current, { ...renderProps,\n        rows,\n        minimumVisibleRows\n      });\n      fn().then(newScope => {\n        scope.current = newScope;\n      });\n    } else if (scope && scope.current) {\n      scope.current.renderProps = { ...renderProps,\n        rows,\n        minimumVisibleRows\n      };\n      scope.current.$applyAsync();\n    }\n  }, [renderProps, minimumVisibleRows, rows]);\n  useEffect(() => {\n    return () => {\n      if (scope.current) {\n        scope.current.$destroy();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(SkipBottomButton, {\n    onClick: onSkipBottomButtonClick\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref\n  }), renderProps.onBackToTop && renderProps.rows.length === renderProps.sampleSize ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dscTable__footer\",\n    \"data-test-subj\": \"discoverDocTableFooter\",\n    tabIndex: -1,\n    id: \"discoverBottomMarker\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"discover.howToSeeOtherMatchingDocumentsDescription\",\n    defaultMessage: \"These are the first {sampleSize} documents matching your search, refine your search to see others.\",\n    values: {\n      sampleSize: renderProps.sampleSize\n    }\n  }), /*#__PURE__*/React.createElement(EuiButtonEmpty, {\n    onClick: renderProps.onBackToTop,\n    \"data-test-subj\": \"discoverBackToTop\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"discover.backToTopLinkText\",\n    defaultMessage: \"Back to top.\"\n  }))) : /*#__PURE__*/React.createElement(\"span\", {\n    tabIndex: -1,\n    id: \"discoverBottomMarker\"\n  }, \"\\u200B\"));\n}","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nexport { SkipBottomButton } from './skip_bottom_button';","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport React from 'react';\nimport { EuiSkipLink } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nexport function SkipBottomButton({\n  onClick\n}) {\n  return /*#__PURE__*/React.createElement(EuiSkipLink, {\n    size: \"s\",\n    onClick: event => {\n      // prevent the anchor to reload the page on click\n      event.preventDefault(); // The destinationId prop cannot be leveraged here as the table needs\n      // to be updated first (angular logic)\n\n      onClick();\n    },\n    className: \"dscSkipButton\",\n    id: \"dscSkipButton\",\n    destinationId: \"\",\n    \"data-test-subj\": \"discoverSkipTableButton\",\n    position: \"absolute\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"discover.skipToBottomButtonLabel\",\n    defaultMessage: \"Go to end of table\"\n  }));\n}","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n// data types\nexport const kibanaJSON = 'kibana-json';\nexport const gridStyle = {\n  border: 'all',\n  fontSize: 's',\n  cellPadding: 's',\n  rowHover: 'none'\n};\nexport const pageSizeArr = [25, 50, 100, 250];\nexport const defaultPageSize = 100;\nexport const toolbarVisibility = {\n  showColumnSelector: {\n    allowHide: false,\n    allowReorder: true\n  },\n  showStyleSelector: false\n};\nexport const defaultMonacoEditorWidth = 370;","\nswitch (window.__kbnThemeTag__) {\n  case 'v7dark':\n    console.error(new Error(\"SASS files in [discovernew] were not built for theme [v7dark]. Styles were compiled using the [v8dark] theme instead to keep Kibana somewhat usable. Please adjust the advanced settings to make use of [v8dark,v8light] or make sure the KBN_OPTIMIZER_THEMES environment variable includes [v7dark] in a comma separated list of themes you want to compile. You can also set it to \\\"*\\\" to build all themes.\"));\n    return require(\"./discover_grid.scss?v8dark\")\n\n  case 'v7light':\n    console.error(new Error(\"SASS files in [discovernew] were not built for theme [v7light]. Styles were compiled using the [v8light] theme instead to keep Kibana somewhat usable. Please adjust the advanced settings to make use of [v8dark,v8light] or make sure the KBN_OPTIMIZER_THEMES environment variable includes [v7light] in a comma separated list of themes you want to compile. You can also set it to \\\"*\\\" to build all themes.\"));\n    return require(\"./discover_grid.scss?v8light\")\n\n  case 'v8dark':\n    return require(\"./discover_grid.scss?v8dark\");\n\n  case 'v8light':\n    return require(\"./discover_grid.scss?v8light\");\n}","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-0-1!../../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-0-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-oneOf-0-3!./discover_grid.scss?v8dark\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-oneOf-1-3!./discover_grid.scss?v8light\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport './discover_grid.scss';\nimport { EuiDataGrid, EuiScreenReaderOnly, EuiSpacer, EuiText, htmlIdGenerator, EuiLoadingSpinner, EuiIcon } from '@elastic/eui';\nimport { getSchemaDetectors } from './discover_grid_schema';\nimport { DiscoverGridFlyout } from './discover_grid_flyout';\nimport { DiscoverGridContext } from './discover_grid_context';\nimport { getRenderCellValueFn } from './get_render_cell_value';\nimport { getEuiGridColumns, getLeadControlColumns, getVisibleColumns } from './discover_grid_columns';\nimport { defaultPageSize, gridStyle, pageSizeArr, toolbarVisibility } from './constants';\nimport { getDisplayedColumns } from '../../helpers/columns';\nimport { KibanaContextProvider } from '../../../../../../src/plugins/kibana_react/public';\nimport { MAX_DOC_FIELDS_DISPLAYED } from '../../../../common';\nimport { DiscoverGridDocumentToolbarBtn, getDocId } from './discover_grid_document_selection';\nexport const EuiDataGridMemoized = /*#__PURE__*/React.memo(props => {\n  return /*#__PURE__*/React.createElement(EuiDataGrid, props);\n});\nexport const DiscoverGrid = ({\n  ariaLabelledBy,\n  columns,\n  indexPattern,\n  isLoading,\n  expandedDoc,\n  onAddColumn,\n  onFilter,\n  onRemoveColumn,\n  onResize,\n  onSetColumns,\n  onSort,\n  rows,\n  sampleSize,\n  searchDescription,\n  searchTitle,\n  services,\n  setExpandedDoc,\n  settings,\n  showTimeCol,\n  sort,\n  useNewFieldsApi,\n  isSortEnabled = true,\n  isPaginationEnabled = true,\n  controlColumnIds = ['openDetails', 'select'],\n  className\n}) => {\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [isFilterActive, setIsFilterActive] = useState(false);\n  const displayedColumns = getDisplayedColumns(columns, indexPattern);\n  const defaultColumns = displayedColumns.includes('_source');\n  const usedSelectedDocs = useMemo(() => {\n    if (!selectedDocs.length || !(rows !== null && rows !== void 0 && rows.length)) {\n      return [];\n    }\n\n    const idMap = rows.reduce((map, row) => map.set(getDocId(row), true), new Map()); // filter out selected docs that are no longer part of the current data\n\n    const result = selectedDocs.filter(docId => idMap.get(docId));\n\n    if (result.length === 0 && isFilterActive) {\n      setIsFilterActive(false);\n    }\n\n    return result;\n  }, [selectedDocs, rows, isFilterActive]);\n  const displayedRows = useMemo(() => {\n    if (!rows) {\n      return [];\n    }\n\n    if (!isFilterActive || usedSelectedDocs.length === 0) {\n      return rows;\n    }\n\n    const rowsFiltered = rows.filter(row => usedSelectedDocs.includes(getDocId(row)));\n\n    if (!rowsFiltered.length) {\n      // in case the selected docs are no longer part of the sample of 500, show all docs\n      return rows;\n    }\n\n    return rowsFiltered;\n  }, [rows, usedSelectedDocs, isFilterActive]);\n  /**\n   * Pagination\n   */\n\n  const [pagination, setPagination] = useState({\n    pageIndex: 0,\n    pageSize: defaultPageSize\n  });\n  const rowCount = useMemo(() => displayedRows ? displayedRows.length : 0, [displayedRows]);\n  const pageCount = useMemo(() => Math.ceil(rowCount / pagination.pageSize), [rowCount, pagination]);\n  const isOnLastPage = pagination.pageIndex === pageCount - 1;\n  const paginationObj = useMemo(() => {\n    const onChangeItemsPerPage = pageSize => setPagination(paginationData => ({ ...paginationData,\n      pageSize\n    }));\n\n    const onChangePage = pageIndex => setPagination(paginationData => ({ ...paginationData,\n      pageIndex\n    }));\n\n    return isPaginationEnabled ? {\n      onChangeItemsPerPage,\n      onChangePage,\n      pageIndex: pagination.pageIndex > pageCount - 1 ? 0 : pagination.pageIndex,\n      pageSize: pagination.pageSize,\n      pageSizeOptions: pageSizeArr\n    } : undefined;\n  }, [pagination, pageCount, isPaginationEnabled]);\n  /**\n   * Sorting\n   */\n\n  const sortingColumns = useMemo(() => sort.map(([id, direction]) => ({\n    id,\n    direction\n  })), [sort]);\n  const onTableSort = useCallback(sortingColumnsData => {\n    if (isSortEnabled && onSort) {\n      onSort(sortingColumnsData.map(({\n        id,\n        direction\n      }) => [id, direction]));\n    }\n  }, [onSort, isSortEnabled]);\n  /**\n   * Cell rendering\n   */\n\n  const renderCellValue = useMemo(() => getRenderCellValueFn(indexPattern, displayedRows, displayedRows ? displayedRows.map(hit => indexPattern.flattenHit(hit)) : [], useNewFieldsApi, services.uiSettings.get(MAX_DOC_FIELDS_DISPLAYED)), [displayedRows, indexPattern, useNewFieldsApi, services.uiSettings]);\n  /**\n   * Render variables\n   */\n\n  const showDisclaimer = rowCount === sampleSize && isOnLastPage;\n  const randomId = useMemo(() => htmlIdGenerator()(), []);\n  const euiGridColumns = useMemo(() => getEuiGridColumns(displayedColumns, settings, indexPattern, showTimeCol, defaultColumns, isSortEnabled), [displayedColumns, indexPattern, showTimeCol, settings, defaultColumns, isSortEnabled]);\n  const schemaDetectors = useMemo(() => getSchemaDetectors(), []);\n  const columnsVisibility = useMemo(() => ({\n    visibleColumns: getVisibleColumns(displayedColumns, indexPattern, showTimeCol),\n    setVisibleColumns: newColumns => {\n      onSetColumns(newColumns);\n    }\n  }), [displayedColumns, indexPattern, showTimeCol, onSetColumns]);\n  const sorting = useMemo(() => {\n    if (isSortEnabled) {\n      return {\n        columns: sortingColumns,\n        onSort: onTableSort\n      };\n    }\n\n    return {\n      columns: sortingColumns,\n      onSort: () => {}\n    };\n  }, [sortingColumns, onTableSort, isSortEnabled]);\n  const lead = useMemo(() => getLeadControlColumns().filter(({\n    id\n  }) => controlColumnIds.includes(id)), [controlColumnIds]);\n  const additionalControls = useMemo(() => usedSelectedDocs.length ? /*#__PURE__*/React.createElement(DiscoverGridDocumentToolbarBtn, {\n    isFilterActive: isFilterActive,\n    rows: rows,\n    selectedDocs: usedSelectedDocs,\n    setSelectedDocs: setSelectedDocs,\n    setIsFilterActive: setIsFilterActive\n  }) : null, [usedSelectedDocs, isFilterActive, rows, setIsFilterActive]);\n\n  if (!rowCount && isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"euiDataGrid__loading\"\n    }, /*#__PURE__*/React.createElement(EuiText, {\n      size: \"xs\",\n      color: \"subdued\"\n    }, /*#__PURE__*/React.createElement(EuiLoadingSpinner, null), /*#__PURE__*/React.createElement(EuiSpacer, {\n      size: \"s\"\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"discover.loadingResults\",\n      defaultMessage: \"Loading results\"\n    })));\n  }\n\n  if (!rowCount) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"euiDataGrid__noResults\"\n    }, /*#__PURE__*/React.createElement(EuiText, {\n      size: \"xs\",\n      color: \"subdued\"\n    }, /*#__PURE__*/React.createElement(EuiIcon, {\n      type: \"discoverApp\",\n      size: \"m\",\n      color: \"subdued\"\n    }), /*#__PURE__*/React.createElement(EuiSpacer, {\n      size: \"s\"\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"discover.noResultsFound\",\n      defaultMessage: \"No results found\"\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(DiscoverGridContext.Provider, {\n    value: {\n      expanded: expandedDoc,\n      setExpanded: setExpandedDoc,\n      rows: displayedRows,\n      onFilter,\n      indexPattern,\n      isDarkMode: services.uiSettings.get('theme:darkMode'),\n      selectedDocs: usedSelectedDocs,\n      setSelectedDocs: newSelectedDocs => {\n        setSelectedDocs(newSelectedDocs);\n\n        if (isFilterActive && newSelectedDocs.length === 0) {\n          setIsFilterActive(false);\n        }\n      }\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"data-test-subj\": \"discoverDocTable\",\n    \"data-render-complete\": isLoading ? 'false' : 'true',\n    \"data-shared-item\": \"\",\n    \"data-title\": searchTitle,\n    \"data-description\": searchDescription,\n    \"data-document-number\": displayedRows.length,\n    className: className\n  }, /*#__PURE__*/React.createElement(KibanaContextProvider, {\n    services: {\n      uiSettings: services.uiSettings\n    }\n  }, /*#__PURE__*/React.createElement(EuiDataGridMemoized, {\n    \"aria-describedby\": randomId,\n    \"aria-labelledby\": ariaLabelledBy,\n    columns: euiGridColumns,\n    columnVisibility: columnsVisibility,\n    \"data-test-subj\": \"docTable\",\n    gridStyle: gridStyle,\n    leadingControlColumns: lead,\n    onColumnResize: col => {\n      if (onResize) {\n        onResize(col);\n      }\n    },\n    pagination: paginationObj,\n    renderCellValue: renderCellValue,\n    rowCount: rowCount,\n    schemaDetectors: schemaDetectors,\n    sorting: sorting,\n    toolbarVisibility: defaultColumns ? { ...toolbarVisibility,\n      showColumnSelector: false,\n      showSortSelector: isSortEnabled,\n      additionalControls\n    } : { ...toolbarVisibility,\n      showSortSelector: isSortEnabled,\n      additionalControls\n    }\n  })), showDisclaimer && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"dscDiscoverGrid__footer\"\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"discover.howToSeeOtherMatchingDocumentsDescriptionGrid\",\n    defaultMessage: \"These are the first {sampleSize} documents matching your search, refine your search to see others.\",\n    values: {\n      sampleSize\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: `#${ariaLabelledBy}`\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"discover.backToTopLinkText\",\n    defaultMessage: \"Back to top.\"\n  }))), searchTitle && /*#__PURE__*/React.createElement(EuiScreenReaderOnly, null, /*#__PURE__*/React.createElement(\"p\", {\n    id: String(randomId)\n  }, searchDescription ? /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"discover.searchGenerationWithDescriptionGrid\",\n    defaultMessage: \"Table generated by search {searchTitle} ({searchDescription})\",\n    values: {\n      searchTitle,\n      searchDescription\n    }\n  }) : /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"discover.searchGenerationWithDescription\",\n    defaultMessage: \"Table generated by search {searchTitle}\",\n    values: {\n      searchTitle\n    }\n  }))), expandedDoc && /*#__PURE__*/React.createElement(DiscoverGridFlyout, {\n    indexPattern: indexPattern,\n    hit: expandedDoc,\n    hits: displayedRows // if default columns are used, dont make them part of the URL - the context state handling will take care to restore them\n    ,\n    columns: defaultColumns ? [] : displayedColumns,\n    onFilter: onFilter,\n    onRemoveColumn: onRemoveColumn,\n    onAddColumn: onAddColumn,\n    onClose: () => setExpandedDoc(undefined),\n    setExpandedDoc: setExpandedDoc,\n    services: services\n  })));\n};","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport React, { useContext } from 'react';\nimport { i18n } from '@kbn/i18n';\nimport { DiscoverGridContext } from './discover_grid_context';\nexport const FilterInBtn = ({\n  Component,\n  rowIndex,\n  columnId\n}) => {\n  const context = useContext(DiscoverGridContext);\n  const buttonTitle = i18n.translate('discover.grid.filterForAria', {\n    defaultMessage: 'Filter for this {value}',\n    values: {\n      value: columnId\n    }\n  });\n  return /*#__PURE__*/React.createElement(Component, {\n    onClick: () => {\n      const row = context.rows[rowIndex];\n      const flattened = context.indexPattern.flattenHit(row);\n\n      if (flattened) {\n        context.onFilter(columnId, flattened[columnId], '+');\n      }\n    },\n    iconType: \"plusInCircle\",\n    \"aria-label\": buttonTitle,\n    title: buttonTitle,\n    \"data-test-subj\": \"filterForButton\"\n  }, i18n.translate('discover.grid.filterFor', {\n    defaultMessage: 'Filter for'\n  }));\n};\nexport const FilterOutBtn = ({\n  Component,\n  rowIndex,\n  columnId\n}) => {\n  const context = useContext(DiscoverGridContext);\n  const buttonTitle = i18n.translate('discover.grid.filterOutAria', {\n    defaultMessage: 'Filter out this {value}',\n    values: {\n      value: columnId\n    }\n  });\n  return /*#__PURE__*/React.createElement(Component, {\n    onClick: () => {\n      const row = context.rows[rowIndex];\n      const flattened = context.indexPattern.flattenHit(row);\n\n      if (flattened) {\n        context.onFilter(columnId, flattened[columnId], '-');\n      }\n    },\n    iconType: \"minusInCircle\",\n    \"aria-label\": buttonTitle,\n    title: buttonTitle,\n    \"data-test-subj\": \"filterOutButton\"\n  }, i18n.translate('discover.grid.filterOut', {\n    defaultMessage: 'Filter out'\n  }));\n};\nexport function buildCellActions(field) {\n  if (!field.filterable) {\n    return undefined;\n  }\n\n  return [FilterInBtn, FilterOutBtn];\n}","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport React from 'react';\nimport { i18n } from '@kbn/i18n';\nimport { EuiScreenReaderOnly } from '@elastic/eui';\nimport { ExpandButton } from './discover_grid_expand_button';\nimport { buildCellActions } from './discover_grid_cell_actions';\nimport { getSchemaByKbnType } from './discover_grid_schema';\nimport { SelectButton } from './discover_grid_document_selection';\nexport function getLeadControlColumns() {\n  return [{\n    id: 'openDetails',\n    width: 24,\n    headerCellRender: () => /*#__PURE__*/React.createElement(EuiScreenReaderOnly, null, /*#__PURE__*/React.createElement(\"span\", null, i18n.translate('discover.controlColumnHeader', {\n      defaultMessage: 'Control column'\n    }))),\n    rowCellRender: ExpandButton\n  }, {\n    id: 'select',\n    width: 24,\n    rowCellRender: SelectButton,\n    headerCellRender: () => /*#__PURE__*/React.createElement(EuiScreenReaderOnly, null, /*#__PURE__*/React.createElement(\"span\", null, i18n.translate('discover.selectColumnHeader', {\n      defaultMessage: 'Select column'\n    })))\n  }];\n}\nexport function buildEuiGridColumn(columnName, columnWidth = 0, indexPattern, defaultColumns, isSortEnabled) {\n  const timeString = i18n.translate('discover.timeLabel', {\n    defaultMessage: 'Time'\n  });\n  const indexPatternField = indexPattern.getFieldByName(columnName);\n  const column = {\n    id: columnName,\n    schema: getSchemaByKbnType(indexPatternField === null || indexPatternField === void 0 ? void 0 : indexPatternField.type),\n    isSortable: isSortEnabled && (indexPatternField === null || indexPatternField === void 0 ? void 0 : indexPatternField.sortable) === true,\n    display: columnName === '_source' ? i18n.translate('discover.grid.documentHeader', {\n      defaultMessage: 'Document'\n    }) : indexPatternField === null || indexPatternField === void 0 ? void 0 : indexPatternField.displayName,\n    actions: {\n      showHide: defaultColumns || columnName === indexPattern.timeFieldName ? false : {\n        label: i18n.translate('discover.removeColumnLabel', {\n          defaultMessage: 'Remove column'\n        }),\n        iconType: 'cross'\n      },\n      showMoveLeft: !defaultColumns,\n      showMoveRight: !defaultColumns\n    },\n    cellActions: indexPatternField ? buildCellActions(indexPatternField) : []\n  };\n\n  if (column.id === indexPattern.timeFieldName) {\n    column.display = `${timeString} (${indexPattern.timeFieldName})`;\n    column.initialWidth = 180;\n  }\n\n  if (columnWidth > 0) {\n    column.initialWidth = Number(columnWidth);\n  }\n\n  return column;\n}\nexport function getEuiGridColumns(columns, settings, indexPattern, showTimeCol, defaultColumns, isSortEnabled) {\n  const timeFieldName = indexPattern.timeFieldName;\n\n  const getColWidth = column => {\n    var _settings$columns$col, _settings$columns, _settings$columns$col2;\n\n    return (_settings$columns$col = settings === null || settings === void 0 ? void 0 : (_settings$columns = settings.columns) === null || _settings$columns === void 0 ? void 0 : (_settings$columns$col2 = _settings$columns[column]) === null || _settings$columns$col2 === void 0 ? void 0 : _settings$columns$col2.width) !== null && _settings$columns$col !== void 0 ? _settings$columns$col : 0;\n  };\n\n  if (showTimeCol && indexPattern.timeFieldName && !columns.find(col => col === timeFieldName)) {\n    const usedColumns = [indexPattern.timeFieldName, ...columns];\n    return usedColumns.map(column => buildEuiGridColumn(column, getColWidth(column), indexPattern, defaultColumns, isSortEnabled));\n  }\n\n  return columns.map(column => buildEuiGridColumn(column, getColWidth(column), indexPattern, defaultColumns, isSortEnabled));\n}\nexport function getVisibleColumns(columns, indexPattern, showTimeCol) {\n  const timeFieldName = indexPattern.timeFieldName;\n\n  if (showTimeCol && !columns.find(col => col === timeFieldName)) {\n    return [timeFieldName, ...columns];\n  }\n\n  return columns;\n}","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport React from 'react';\nconst defaultContext = {};\nexport const DiscoverGridContext = /*#__PURE__*/React.createContext(defaultContext);","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport React, { useCallback, useState, useContext, useMemo, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { EuiButtonEmpty, EuiContextMenuItem, EuiContextMenuPanel, EuiCopy, EuiPopover, EuiCheckbox } from '@elastic/eui';\nimport { FormattedMessage } from '@kbn/i18n/react';\nimport themeDark from '@elastic/eui/dist/eui_theme_dark.json';\nimport themeLight from '@elastic/eui/dist/eui_theme_light.json';\nimport { DiscoverGridContext } from './discover_grid_context';\n/**\n * Returning a generated id of a given ES document, since `_id` can be the same\n * when using different indices and shard routing\n */\n\nexport const getDocId = doc => {\n  const routing = doc._routing ? doc._routing : '';\n  return [doc._index, doc._id, routing].join('::');\n};\nexport const SelectButton = ({\n  rowIndex,\n  setCellProps\n}) => {\n  const {\n    selectedDocs,\n    expanded,\n    rows,\n    isDarkMode,\n    setSelectedDocs\n  } = useContext(DiscoverGridContext);\n  const doc = useMemo(() => rows[rowIndex], [rows, rowIndex]);\n  const id = useMemo(() => getDocId(doc), [doc]);\n  const checked = useMemo(() => selectedDocs.includes(id), [selectedDocs, id]);\n  useEffect(() => {\n    if (expanded && doc && expanded._id === doc._id) {\n      setCellProps({\n        style: {\n          backgroundColor: isDarkMode ? themeDark.euiColorHighlight : themeLight.euiColorHighlight\n        }\n      });\n    } else {\n      setCellProps({\n        style: undefined\n      });\n    }\n  }, [expanded, doc, setCellProps, isDarkMode]);\n  return /*#__PURE__*/React.createElement(EuiCheckbox, {\n    id: id,\n    label: \"\",\n    checked: checked,\n    \"data-test-subj\": `dscGridSelectDoc-${id}`,\n    onChange: () => {\n      if (checked) {\n        const newSelection = selectedDocs.filter(docId => docId !== id);\n        setSelectedDocs(newSelection);\n      } else {\n        setSelectedDocs([...selectedDocs, id]);\n      }\n    }\n  });\n};\nexport function DiscoverGridDocumentToolbarBtn({\n  isFilterActive,\n  rows,\n  selectedDocs,\n  setIsFilterActive,\n  setSelectedDocs\n}) {\n  const [isSelectionPopoverOpen, setIsSelectionPopoverOpen] = useState(false);\n  const getMenuItems = useCallback(() => {\n    return [isFilterActive ? /*#__PURE__*/React.createElement(EuiContextMenuItem, {\n      \"data-test-subj\": \"dscGridShowAllDocuments\",\n      key: \"showAllDocuments\",\n      icon: \"eye\",\n      onClick: () => {\n        setIsSelectionPopoverOpen(false);\n        setIsFilterActive(false);\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"discover.showAllDocuments\",\n      defaultMessage: \"Show all documents\"\n    })) : /*#__PURE__*/React.createElement(EuiContextMenuItem, {\n      \"data-test-subj\": \"dscGridShowSelectedDocuments\",\n      key: \"showSelectedDocuments\",\n      icon: \"eye\",\n      onClick: () => {\n        setIsSelectionPopoverOpen(false);\n        setIsFilterActive(true);\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"discover.showSelectedDocumentsOnly\",\n      defaultMessage: \"Show selected documents only\"\n    })), /*#__PURE__*/React.createElement(EuiCopy, {\n      key: \"copyJsonWrapper\",\n      \"data-test-subj\": \"dscGridCopySelectedDocumentsJSON\",\n      textToCopy: rows ? JSON.stringify(rows.filter(row => selectedDocs.includes(getDocId(row)))) : ''\n    }, copy => /*#__PURE__*/React.createElement(EuiContextMenuItem, {\n      key: \"copyJSON\",\n      icon: \"copyClipboard\",\n      onClick: copy\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"discover.copyToClipboardJSON\",\n      defaultMessage: \"Copy documents to clipboard (JSON)\"\n    }))), /*#__PURE__*/React.createElement(EuiContextMenuItem, {\n      \"data-test-subj\": \"dscGridClearSelectedDocuments\",\n      key: \"clearSelection\",\n      icon: \"cross\",\n      onClick: () => {\n        setIsSelectionPopoverOpen(false);\n        setSelectedDocs([]);\n        setIsFilterActive(false);\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"discover.clearSelection\",\n      defaultMessage: \"Clear selection\"\n    }))];\n  }, [isFilterActive, rows, selectedDocs, setIsFilterActive, setIsSelectionPopoverOpen, setSelectedDocs]);\n  return /*#__PURE__*/React.createElement(EuiPopover, {\n    closePopover: () => setIsSelectionPopoverOpen(false),\n    isOpen: isSelectionPopoverOpen,\n    panelPaddingSize: \"none\",\n    button: /*#__PURE__*/React.createElement(EuiButtonEmpty, {\n      size: \"xs\",\n      color: \"text\",\n      iconType: \"documents\",\n      onClick: () => setIsSelectionPopoverOpen(true),\n      \"data-selected-documents\": selectedDocs.length,\n      \"data-test-subj\": \"dscGridSelectionBtn\",\n      isSelected: isFilterActive,\n      className: classNames({\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        euiDataGrid__controlBtn: true,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        'euiDataGrid__controlBtn--active': isFilterActive\n      })\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"discover.selectedDocumentsNumber\",\n      defaultMessage: \"{nr} documents selected\",\n      values: {\n        nr: selectedDocs.length\n      }\n    }))\n  }, isSelectionPopoverOpen && /*#__PURE__*/React.createElement(EuiContextMenuPanel, {\n    items: getMenuItems()\n  }));\n}","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport React, { useContext, useEffect } from 'react';\nimport { EuiButtonIcon, EuiToolTip } from '@elastic/eui';\nimport themeDark from '@elastic/eui/dist/eui_theme_dark.json';\nimport themeLight from '@elastic/eui/dist/eui_theme_light.json';\nimport { i18n } from '@kbn/i18n';\nimport { DiscoverGridContext } from './discover_grid_context';\n\n/**\n * Button to expand a given row\n */\nexport const ExpandButton = ({\n  rowIndex,\n  setCellProps\n}) => {\n  const {\n    expanded,\n    setExpanded,\n    rows,\n    isDarkMode\n  } = useContext(DiscoverGridContext);\n  const current = rows[rowIndex];\n  useEffect(() => {\n    if (current.isAnchor) {\n      setCellProps({\n        className: 'dscDocsGrid__cell--highlight'\n      });\n    } else if (expanded && current && expanded._id === current._id) {\n      setCellProps({\n        style: {\n          backgroundColor: isDarkMode ? themeDark.euiColorHighlight : themeLight.euiColorHighlight\n        }\n      });\n    } else {\n      setCellProps({\n        style: undefined\n      });\n    }\n  }, [expanded, current, setCellProps, isDarkMode]);\n  const isCurrentRowExpanded = current === expanded;\n  const buttonLabel = i18n.translate('discover.grid.viewDoc', {\n    defaultMessage: 'Toggle dialog with details'\n  });\n  return /*#__PURE__*/React.createElement(EuiToolTip, {\n    content: buttonLabel,\n    delay: \"long\"\n  }, /*#__PURE__*/React.createElement(EuiButtonIcon, {\n    size: \"xs\",\n    iconSize: \"s\",\n    \"aria-label\": buttonLabel,\n    \"data-test-subj\": \"docTableExpandToggleColumn\",\n    onClick: () => setExpanded(isCurrentRowExpanded ? undefined : current),\n    color: isCurrentRowExpanded ? 'primary' : 'subdued',\n    iconType: isCurrentRowExpanded ? 'minimize' : 'expand',\n    isSelected: isCurrentRowExpanded\n  }));\n};","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport React, { useMemo, useCallback } from 'react';\nimport { i18n } from '@kbn/i18n';\nimport { EuiFlexGroup, EuiFlexItem, EuiFlyout, EuiFlyoutBody, EuiFlyoutHeader, EuiTitle, EuiButtonEmpty, EuiText, EuiSpacer, EuiPortal, EuiPagination, EuiHideFor, keys } from '@elastic/eui';\nimport { DocViewer } from '../doc_viewer/doc_viewer';\nimport { getContextUrl } from '../../helpers/get_context_url';\n\nfunction getDocFingerprintId(doc) {\n  const routing = doc._routing || '';\n  return [doc._index, doc._id, routing].join('||');\n}\n\nfunction getIndexByDocId(hits, id) {\n  return hits.findIndex(h => {\n    return getDocFingerprintId(h) === id;\n  });\n}\n/**\n * Flyout displaying an expanded Elasticsearch document\n */\n\n\nexport function DiscoverGridFlyout({\n  hit,\n  hits,\n  indexPattern,\n  columns,\n  onFilter,\n  onClose,\n  onRemoveColumn,\n  onAddColumn,\n  services,\n  setExpandedDoc\n}) {\n  const pageCount = useMemo(() => hits ? hits.length : 0, [hits]);\n  const activePage = useMemo(() => {\n    const id = getDocFingerprintId(hit);\n\n    if (!hits || pageCount <= 1) {\n      return -1;\n    }\n\n    return getIndexByDocId(hits, id);\n  }, [hits, hit, pageCount]);\n  const setPage = useCallback(pageIdx => {\n    if (hits && hits[pageIdx]) {\n      setExpandedDoc(hits[pageIdx]);\n    }\n  }, [hits, setExpandedDoc]);\n  const onKeyDown = useCallback(ev => {\n    if (ev.key === keys.ARROW_LEFT || ev.key === keys.ARROW_RIGHT) {\n      ev.preventDefault();\n      ev.stopPropagation();\n      setPage(activePage + (ev.key === keys.ARROW_RIGHT ? 1 : -1));\n    }\n  }, [activePage, setPage]);\n  return /*#__PURE__*/React.createElement(EuiPortal, null, /*#__PURE__*/React.createElement(EuiFlyout, {\n    onClose: onClose,\n    size: \"m\",\n    \"data-test-subj\": \"docTableDetailsFlyout\",\n    onKeyDown: onKeyDown\n  }, /*#__PURE__*/React.createElement(EuiFlyoutHeader, {\n    hasBorder: true\n  }, /*#__PURE__*/React.createElement(EuiTitle, {\n    size: \"s\",\n    className: \"dscTable__flyoutHeader\",\n    \"data-test-subj\": \"docTableRowDetailsTitle\"\n  }, /*#__PURE__*/React.createElement(\"h2\", null, i18n.translate('discover.grid.tableRow.detailHeading', {\n    defaultMessage: 'Expanded document'\n  }))), /*#__PURE__*/React.createElement(EuiSpacer, {\n    size: \"s\"\n  }), /*#__PURE__*/React.createElement(EuiFlexGroup, {\n    responsive: false,\n    gutterSize: \"s\",\n    alignItems: \"center\"\n  }, /*#__PURE__*/React.createElement(EuiHideFor, {\n    sizes: ['xs', 's', 'm']\n  }, /*#__PURE__*/React.createElement(EuiFlexItem, {\n    grow: false\n  }, /*#__PURE__*/React.createElement(EuiText, {\n    size: \"s\"\n  }, /*#__PURE__*/React.createElement(\"strong\", null, i18n.translate('discover.grid.tableRow.viewText', {\n    defaultMessage: 'View:'\n  }))))), /*#__PURE__*/React.createElement(EuiFlexItem, {\n    grow: false\n  }, /*#__PURE__*/React.createElement(EuiButtonEmpty, {\n    size: \"xs\",\n    iconType: \"document\",\n    flush: \"left\",\n    href: services.addBasePath(`/app/discover#/doc/${indexPattern.id}/${hit._index}?id=${encodeURIComponent(hit._id)}`),\n    \"data-test-subj\": \"docTableRowAction\"\n  }, i18n.translate('discover.grid.tableRow.viewSingleDocumentLinkTextSimple', {\n    defaultMessage: 'Single document'\n  }))), indexPattern.isTimeBased() && indexPattern.id && /*#__PURE__*/React.createElement(EuiFlexItem, {\n    grow: false\n  }, /*#__PURE__*/React.createElement(EuiButtonEmpty, {\n    size: \"xs\",\n    iconType: \"documents\",\n    flush: \"left\",\n    href: getContextUrl(String(hit._id), indexPattern.id, columns, services.filterManager, services.addBasePath),\n    \"data-test-subj\": \"docTableRowAction\"\n  }, i18n.translate('discover.grid.tableRow.viewSurroundingDocumentsLinkTextSimple', {\n    defaultMessage: 'Surrounding documents'\n  }))), activePage !== -1 && /*#__PURE__*/React.createElement(EuiFlexItem, null, /*#__PURE__*/React.createElement(EuiPagination, {\n    \"aria-label\": i18n.translate('discover.grid.flyout.documentNavigation', {\n      defaultMessage: 'Document navigation'\n    }),\n    pageCount: pageCount,\n    activePage: activePage,\n    onPageClick: setPage,\n    className: \"dscTable__flyoutDocumentNavigation\",\n    compressed: true,\n    \"data-test-subj\": \"dscDocNavigation\"\n  })))), /*#__PURE__*/React.createElement(EuiFlyoutBody, null, /*#__PURE__*/React.createElement(DocViewer, {\n    hit: hit,\n    columns: columns,\n    indexPattern: indexPattern,\n    filter: (mapping, value, mode) => {\n      onFilter(mapping, value, mode);\n      services.toastNotifications.addSuccess(i18n.translate('discover.grid.flyout.toastFilterAdded', {\n        defaultMessage: `Filter was added`\n      }));\n    },\n    onRemoveColumn: columnName => {\n      onRemoveColumn(columnName);\n      services.toastNotifications.addSuccess(i18n.translate('discover.grid.flyout.toastColumnRemoved', {\n        defaultMessage: `Column '{columnName}' was removed`,\n        values: {\n          columnName\n        }\n      }));\n    },\n    onAddColumn: columnName => {\n      onAddColumn(columnName);\n      services.toastNotifications.addSuccess(i18n.translate('discover.grid.flyout.toastColumnAdded', {\n        defaultMessage: `Column '{columnName}' was added`,\n        values: {\n          columnName\n        }\n      }));\n    }\n  }))));\n}","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport { kibanaJSON } from './constants';\nimport { KBN_FIELD_TYPES } from '../../../../../../src/plugins/data/common';\nexport function getSchemaByKbnType(kbnType) {\n  // Default DataGrid schemas: boolean, numeric, datetime, json, currency, string\n  switch (kbnType) {\n    case KBN_FIELD_TYPES.IP:\n    case KBN_FIELD_TYPES.GEO_SHAPE:\n    case KBN_FIELD_TYPES.NUMBER:\n      return 'numeric';\n\n    case KBN_FIELD_TYPES.BOOLEAN:\n      return 'boolean';\n\n    case KBN_FIELD_TYPES.STRING:\n      return 'string';\n\n    case KBN_FIELD_TYPES.DATE:\n      return 'datetime';\n\n    default:\n      return kibanaJSON;\n  }\n}\nexport function getSchemaDetectors() {\n  return [{\n    type: kibanaJSON,\n\n    detector() {\n      return 0; // this schema is always explicitly defined\n    },\n\n    sortTextAsc: '',\n    sortTextDesc: '',\n    icon: '',\n    color: ''\n  }];\n}","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport themeLight from '@elastic/eui/dist/eui_theme_light.json';\nimport themeDark from '@elastic/eui/dist/eui_theme_dark.json';\nimport { EuiDescriptionList, EuiDescriptionListTitle, EuiDescriptionListDescription } from '@elastic/eui';\nimport { DiscoverGridContext } from './discover_grid_context';\nimport { JsonCodeEditor } from '../json_code_editor/json_code_editor';\nimport { defaultMonacoEditorWidth } from './constants';\nexport const getRenderCellValueFn = (indexPattern, rows, rowsFlattened, useNewFieldsApi, maxDocFieldsDisplayed) => ({\n  rowIndex,\n  columnId,\n  isDetails,\n  setCellProps\n}) => {\n  const row = rows ? rows[rowIndex] : undefined;\n  const rowFlattened = rowsFlattened ? rowsFlattened[rowIndex] : undefined;\n  const field = indexPattern.fields.getByName(columnId);\n  const ctx = useContext(DiscoverGridContext);\n  useEffect(() => {\n    if (row.isAnchor) {\n      setCellProps({\n        className: 'dscDocsGrid__cell--highlight'\n      });\n    } else if (ctx.expanded && row && ctx.expanded._id === row._id) {\n      setCellProps({\n        style: {\n          backgroundColor: ctx.isDarkMode ? themeDark.euiColorHighlight : themeLight.euiColorHighlight\n        }\n      });\n    } else {\n      setCellProps({\n        style: undefined\n      });\n    }\n  }, [ctx, row, setCellProps]);\n\n  if (typeof row === 'undefined' || typeof rowFlattened === 'undefined') {\n    return /*#__PURE__*/React.createElement(\"span\", null, \"-\");\n  }\n\n  if (useNewFieldsApi && !field && row && row.fields && !row.fields[columnId]) {\n    var _ref;\n\n    const innerColumns = Object.fromEntries(Object.entries(row.fields).filter(([key]) => {\n      return key.indexOf(`${columnId}.`) === 0;\n    }));\n\n    if (isDetails) {\n      // nicely formatted JSON for the expanded view\n      return /*#__PURE__*/React.createElement(\"span\", null, JSON.stringify(innerColumns, null, 2));\n    } // Put the most important fields first\n\n\n    const highlights = (_ref = row.highlight) !== null && _ref !== void 0 ? _ref : {};\n    const highlightPairs = [];\n    const sourcePairs = [];\n    Object.entries(innerColumns).forEach(([key, values]) => {\n      var _indexPattern$fields$;\n\n      const subField = indexPattern.getFieldByName(key);\n      const displayKey = indexPattern.fields.getByName ? (_indexPattern$fields$ = indexPattern.fields.getByName(key)) === null || _indexPattern$fields$ === void 0 ? void 0 : _indexPattern$fields$.displayName : undefined;\n      const formatter = subField ? indexPattern.getFormatterForField(subField) : {\n        convert: (v, ...rest) => String(v)\n      };\n      const formatted = values.map(val => formatter.convert(val, 'html', {\n        field: subField,\n        hit: row,\n        indexPattern\n      })).join(', ');\n      const pairs = highlights[key] ? highlightPairs : sourcePairs;\n      pairs.push([displayKey ? displayKey : key, formatted]);\n    });\n    return /*#__PURE__*/React.createElement(EuiDescriptionList, {\n      type: \"inline\",\n      compressed: true,\n      className: \"dscDiscoverGrid__descriptionList\"\n    }, [...highlightPairs, ...sourcePairs].slice(0, maxDocFieldsDisplayed).map(([key, value]) => /*#__PURE__*/React.createElement(Fragment, {\n      key: key\n    }, /*#__PURE__*/React.createElement(EuiDescriptionListTitle, null, key), /*#__PURE__*/React.createElement(EuiDescriptionListDescription, {\n      dangerouslySetInnerHTML: {\n        __html: value\n      },\n      className: \"dscDiscoverGrid__descriptionListDescription\"\n    }))));\n  }\n\n  if (typeof rowFlattened[columnId] === 'object' && isDetails) {\n    return /*#__PURE__*/React.createElement(JsonCodeEditor, {\n      json: rowFlattened[columnId],\n      width: defaultMonacoEditorWidth\n    });\n  }\n\n  if (field && field.type === '_source') {\n    var _ref2;\n\n    if (isDetails) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return /*#__PURE__*/React.createElement(JsonCodeEditor, {\n        json: row,\n        width: defaultMonacoEditorWidth\n      });\n    }\n\n    const formatted = indexPattern.formatHit(row); // Put the most important fields first\n\n    const highlights = (_ref2 = row.highlight) !== null && _ref2 !== void 0 ? _ref2 : {};\n    const highlightPairs = [];\n    const sourcePairs = [];\n    Object.entries(formatted).forEach(([key, val]) => {\n      var _indexPattern$fields$2;\n\n      const pairs = highlights[key] ? highlightPairs : sourcePairs;\n      const displayKey = indexPattern.fields.getByName ? (_indexPattern$fields$2 = indexPattern.fields.getByName(key)) === null || _indexPattern$fields$2 === void 0 ? void 0 : _indexPattern$fields$2.displayName : undefined;\n      pairs.push([displayKey ? displayKey : key, val]);\n    });\n    return /*#__PURE__*/React.createElement(EuiDescriptionList, {\n      type: \"inline\",\n      compressed: true,\n      className: \"dscDiscoverGrid__descriptionList\"\n    }, [...highlightPairs, ...sourcePairs].slice(0, maxDocFieldsDisplayed).map(([key, value]) => /*#__PURE__*/React.createElement(Fragment, {\n      key: key\n    }, /*#__PURE__*/React.createElement(EuiDescriptionListTitle, null, key), /*#__PURE__*/React.createElement(EuiDescriptionListDescription, {\n      dangerouslySetInnerHTML: {\n        __html: value\n      },\n      className: \"dscDiscoverGrid__descriptionListDescription\"\n    }))));\n  }\n\n  if (!(field !== null && field !== void 0 && field.type) && rowFlattened && typeof rowFlattened[columnId] === 'object') {\n    if (isDetails) {\n      // nicely formatted JSON for the expanded view\n      return /*#__PURE__*/React.createElement(\"span\", null, JSON.stringify(rowFlattened[columnId], null, 2));\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", null, JSON.stringify(rowFlattened[columnId]));\n  }\n\n  const valueFormatted = indexPattern.formatField(row, columnId);\n\n  if (typeof valueFormatted === 'undefined') {\n    return /*#__PURE__*/React.createElement(\"span\", null, \"-\");\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/no-danger\n    React.createElement(\"span\", {\n      dangerouslySetInnerHTML: {\n        __html: indexPattern.formatField(row, columnId)\n      }\n    })\n  );\n};","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport './json_code_editor.scss';\nimport React, { useCallback } from 'react';\nimport { monaco } from '@kbn/monaco';\nimport { JsonCodeEditorCommon } from './json_code_editor_common';\nexport const JsonCodeEditor = ({\n  json,\n  width,\n  hasLineNumbers\n}) => {\n  const jsonValue = JSON.stringify(json, null, 2); // setting editor height based on lines height and count to stretch and fit its content\n\n  const setEditorCalculatedHeight = useCallback(editor => {\n    var _editor$getModel;\n\n    const editorElement = editor.getDomNode();\n\n    if (!editorElement) {\n      return;\n    }\n\n    const lineHeight = editor.getOption(monaco.editor.EditorOption.lineHeight);\n    const lineCount = ((_editor$getModel = editor.getModel()) === null || _editor$getModel === void 0 ? void 0 : _editor$getModel.getLineCount()) || 1;\n    const height = editor.getTopForLineNumber(lineCount + 1) + lineHeight;\n    editorElement.style.height = `${height}px`;\n    editor.layout();\n  }, []);\n  return /*#__PURE__*/React.createElement(JsonCodeEditorCommon, {\n    jsonValue: jsonValue,\n    width: width,\n    hasLineNumbers: hasLineNumbers,\n    onEditorDidMount: setEditorCalculatedHeight\n  });\n};","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n// We store this outside the function as a constant, so we're not creating a new array every time\n// the function is returning this. A changing array might cause the data grid to think it got\n// new columns, and thus performing worse than using the same array over multiple renders.\nconst SOURCE_ONLY = ['_source'];\n/**\n * Function to provide fallback when\n * 1) no columns are given\n * 2) Just one column is given, which is the configured timefields\n */\n\nexport function getDisplayedColumns(stateColumns = [], indexPattern) {\n  return stateColumns && stateColumns.length > 0 && // check if all columns where removed except the configured timeField (this can't be removed)\n  !(stateColumns.length === 1 && stateColumns[0] === indexPattern.timeFieldName) ? stateColumns : SOURCE_ONLY;\n}","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nimport { stringify } from 'query-string';\nimport rison from 'rison-node';\nimport { url } from '../../../../../src/plugins/kibana_utils/common';\nimport { esFilters } from '../../../../../src/plugins/data/public';\n\n/**\n * Helper function to generate an URL to a document in Discover's context view\n */\nexport function getContextUrl(documentId, indexPatternId, columns, filterManager, addBasePath) {\n  const globalFilters = filterManager.getGlobalFilters();\n  const appFilters = filterManager.getAppFilters();\n  const hash = stringify(url.encodeQuery({\n    _g: rison.encode({\n      filters: globalFilters || []\n    }),\n    _a: rison.encode({\n      columns,\n      filters: (appFilters || []).map(esFilters.disableFilter)\n    })\n  }), {\n    encode: false,\n    sort: false\n  });\n  return addBasePath(`/app/discover#/context/${encodeURIComponent(indexPatternId)}/${encodeURIComponent(documentId)}?${hash}`);\n}","/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nasync function popularizeField(indexPattern, fieldName, indexPatternsService) {\n  if (!indexPattern.id) return;\n  const field = indexPattern.fields.getByName(fieldName);\n\n  if (!field) {\n    return;\n  }\n\n  field.count++; // Catch 409 errors caused by user adding columns in a higher frequency that the changes can be persisted to Elasticsearch\n\n  try {\n    await indexPatternsService.updateSavedObject(indexPattern, 0, true); // eslint-disable-next-line no-empty\n  } catch {}\n}\n\nexport { popularizeField };"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AACA;;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClhHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9IA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClrJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}